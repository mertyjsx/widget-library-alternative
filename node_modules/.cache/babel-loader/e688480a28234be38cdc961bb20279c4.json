{"ast":null,"code":"var _jsxFileName = \"D:\\\\webpack-react\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction insertAfter(newElement, referenceElement) {\n  referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);\n}\n\nexport const start = config => {\n  console.log(config);\n  const domContainer = document.querySelector(config.placeholder);\n  const reactRoot = document.createElement(\"div\");\n  insertAfter(reactRoot, domContainer); //reactRoot\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {\n      config: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 22\n  }, this), document.getElementById('root'));\n};\nlet configuration = {\n  attributes: ['red', 'blue', 'black'],\n  placeholder: '.product-color',\n  placeholder_text: 'Surprise me with the color',\n  cart_button: '.cart-btn',\n  image: window.location.origin + '/images/black.png',\n  select_attribute: function (attr) {\n    $(\".active\").removeClass(\"active\");\n    $(\".left-column img[data-image = \" + attr + \"]\").addClass(\"active\");\n    document.querySelector(`input#${attr}`).checked = true;\n  }\n};\nstart(configuration);","map":{"version":3,"sources":["D:/webpack-react/src/index.js"],"names":["React","ReactDOM","App","Provider","store","insertAfter","newElement","referenceElement","parentNode","insertBefore","nextSibling","start","config","console","log","domContainer","document","querySelector","placeholder","reactRoot","createElement","render","getElementById","configuration","attributes","placeholder_text","cart_button","image","window","location","origin","select_attribute","attr","$","removeClass","addClass","checked"],"mappings":";AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAGA,SAASC,KAAT,QAAsB,eAAtB;;;AAEA,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,gBAAjC,EAAmD;AACjDA,EAAAA,gBAAgB,CAACC,UAAjB,CAA4BC,YAA5B,CACEH,UADF,EAEEC,gBAAgB,CAACG,WAFnB;AAID;;AAGD,OAAO,MAAMC,KAAK,GAAIC,MAAD,IAAY;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEI,QAAMG,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuBL,MAAM,CAACM,WAA9B,CAArB;AACA,QAAMC,SAAS,GAAGH,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAlB;AAEAf,EAAAA,WAAW,CAACc,SAAD,EAAYJ,YAAZ,CAAX,CAN6B,CAOjC;;AACId,EAAAA,QAAQ,CAACoB,MAAT,eAAiB,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEjB,KAAjB;AAAA,2BAAwB,QAAC,GAAD;AAAK,MAAA,MAAM,EAAEQ;AAAb;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAjB,EAA6EI,QAAQ,CAACM,cAAT,CAAwB,MAAxB,CAA7E;AACH,CATM;AAWP,IAAIC,aAAa,GAAG;AAChBC,EAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,CADI;AAEhBN,EAAAA,WAAW,EAAE,gBAFG;AAGhBO,EAAAA,gBAAgB,EAAE,4BAHF;AAIhBC,EAAAA,WAAW,EAAE,WAJG;AAKhBC,EAAAA,KAAK,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,mBALhB;AAMhBC,EAAAA,gBAAgB,EAAE,UAASC,IAAT,EAAe;AAC/BC,IAAAA,CAAC,CAAC,SAAD,CAAD,CAAaC,WAAb,CAAyB,QAAzB;AACCD,IAAAA,CAAC,CAAC,mCAAmCD,IAAnC,GAA0C,GAA3C,CAAD,CAAiDG,QAAjD,CAA0D,QAA1D;AACAnB,IAAAA,QAAQ,CAACC,aAAT,CAAwB,SAAQe,IAAK,EAArC,EAAwCI,OAAxC,GAAkD,IAAlD;AACD;AAVc,CAApB;AAeAzB,KAAK,CAACY,aAAD,CAAL","sourcesContent":["\r\n\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\nimport { store } from \"./redux/store\";\r\n\r\nfunction insertAfter(newElement, referenceElement) {\r\n  referenceElement.parentNode.insertBefore(\r\n    newElement,\r\n    referenceElement.nextSibling\r\n  );\r\n}\r\n\r\n\r\nexport const start = (config) => {\r\nconsole.log(config)\r\n\r\n    const domContainer = document.querySelector(config.placeholder);\r\n    const reactRoot = document.createElement(\"div\");\r\n\r\n    insertAfter(reactRoot, domContainer);\r\n//reactRoot\r\n    ReactDOM.render( <Provider store={store}><App config={config} /></Provider>, document.getElementById('root') );\r\n};\r\n\r\nlet configuration = {\r\n    attributes: ['red', 'blue', 'black'],\r\n    placeholder: '.product-color',\r\n    placeholder_text: 'Surprise me with the color',\r\n    cart_button: '.cart-btn',\r\n    image: window.location.origin + '/images/black.png',\r\n    select_attribute: function(attr) {\r\n      $(\".active\").removeClass(\"active\");\r\n       $(\".left-column img[data-image = \" + attr + \"]\").addClass(\"active\");\r\n       document.querySelector(`input#${attr}`).checked = true;\r\n     }\r\n  }\r\n\r\n\r\n\r\nstart(configuration)"]},"metadata":{},"sourceType":"module"}