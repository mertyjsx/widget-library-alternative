{"ast":null,"code":"var _jsxFileName = \"D:\\\\webpack-react\\\\src\\\\components\\\\Modal\\\\modalContents\\\\attributeContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { closeModalAction } from \"../../../redux/modalReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function attributeContent(_ref) {\n  _s();\n\n  let {\n    setPage,\n    page\n  } = _ref;\n  const [attr, setAttr] = useState(\"\");\n  const dispatch = useDispatch();\n  const widgetAttributes = useSelector(state => state.configReducer.config.widgetAttributes || []);\n  const widgetSelectAttributesFunction = useSelector(state => state.configReducer.config.select_attribute);\n  useEffect(() => {\n    var randomAttr = widgetAttributes[Math.floor(Math.random() * widgetAttributes.length)];\n    setAttr(randomAttr);\n  }, []);\n\n  const attributeHandler = () => {\n    widgetSelectAttributesFunction();\n    dispatch(closeModalAction());\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [widgetAttributes.map(item => attr === item ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedAttribute\",\n      style: {\n        backgroundColor: item\n      },\n      children: attr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setAttr(item),\n      className: \"borderButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attributeButton\",\n      onClick: attributeHandler,\n      children: \"Select me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(attributeContent, \"RT01/jepP+9rjNcHnBE/Z/fl4Fg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});","map":{"version":3,"sources":["D:/webpack-react/src/components/Modal/modalContents/attributeContent.js"],"names":["React","useState","useEffect","useSelector","useDispatch","closeModalAction","attributeContent","setPage","page","attr","setAttr","dispatch","widgetAttributes","state","configReducer","config","widgetSelectAttributesFunction","select_attribute","randomAttr","Math","floor","random","length","attributeHandler","map","item","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,gBAAR,QAA+B,6BAA/B;;AAEA,eAAe,SAASC,gBAAT,OAA6C;AAAA;;AAAA,MAAnB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAmB;AAC1D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,gBAAgB,GAAGT,WAAW,CACjCU,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,MAApB,CAA2BH,gBAA3B,IAA+C,EADxB,CAApC;AAGA,QAAMI,8BAA8B,GAAGb,WAAW,CAC/CU,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,MAApB,CAA2BE,gBADU,CAAlD;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,UAAU,GACZN,gBAAgB,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,gBAAgB,CAACU,MAA5C,CAAD,CADlB;AAEAZ,IAAAA,OAAO,CAACQ,UAAD,CAAP;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMK,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,8BAA8B;AAC9BL,IAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACAE,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,eACGK,gBAAgB,CAACY,GAAjB,CAAsBC,IAAD,IACpBhB,IAAI,KAAKgB,IAAT,gBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAACD;AAAjB,OAA1C;AAAA,gBAAmEhB;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAK,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACe,IAAD,CAA3B;AAAmC,MAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJH,CADH,eAQE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,OAAO,EAAEF,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApCuBjB,gB;UAGLF,W,EAEQD,W,EAGcA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {closeModalAction} from \"../../../redux/modalReducer\"\r\n\r\nexport default function attributeContent({ setPage, page }) {\r\n  const [attr, setAttr] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const widgetAttributes = useSelector(\r\n    (state) => state.configReducer.config.widgetAttributes || []\r\n  );\r\n  const widgetSelectAttributesFunction = useSelector(\r\n    (state) => state.configReducer.config.select_attribute\r\n  );\r\n\r\n  useEffect(() => {\r\n    var randomAttr =\r\n      widgetAttributes[Math.floor(Math.random() * widgetAttributes.length)];\r\n    setAttr(randomAttr);\r\n  }, []);\r\n\r\n  const attributeHandler = () => {\r\n    widgetSelectAttributesFunction();\r\n    dispatch(closeModalAction());\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {widgetAttributes.map((item) =>\r\n        attr === item ? (\r\n          <div className=\"selectedAttribute\" style={{backgroundColor:item}}>{attr}</div>\r\n        ) : (\r\n          <div onClick={() => setAttr(item)} className=\"borderButton\"></div>\r\n        )\r\n      )}\r\n      <div className=\"attributeButton\" onClick={attributeHandler}>Select me</div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}